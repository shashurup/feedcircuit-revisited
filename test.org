#+begin_src clojure :results pp
(ns user
  (:require [feedcircuit-revisited.main :as m]
            [feedcircuit-revisited.feed :as f]
            [feedcircuit-revisited.backend :as b]
            [feedcircuit-revisited.schema :as schema]
            [feedcircuit-revisited.datomic-backend :as d-b]
            [feedcircuit-revisited.fs-backend :as f-b]
            [feedcircuit-revisited.content :as c]
            [feedcircuit-revisited.ui :as u]
            [feedcircuit-revisited.utils :as ut]
            [feedcircuit-revisited.handler :as h]
            [feedcircuit-revisited.conf :as conf]
            [feedcircuit-revisited.schema :as s]
            [datomic.client.api :as d]
            [hiccup.core :as html]
            [clojure.zip :as zip]
            [me.raynes.fs :as fs]
            [clojure.xml :as xml]
))
#+end_src

#+RESULTS:
: 
: 

#+begin_src clojure :results pp
(d/q '[:find (pull ?f [
                       :feed/url
                       ;:feed/content-ident
                       ; :feed/title
                       ; :feed/last-num
                       ; *
                       ])
       :where [?f :feed/url _]]
     (d/db d-b/conn))
#+end_src

#+RESULTS:
#+begin_example
[[#:feed{:url "http://www.opennet.ru/opennews/opennews_all.rss",
         :content-ident [:id "r_memo"]}]
 [#:feed{:url "https://www.kommersant.ru/RSS/section-hitech.xml",
         :content-ident
         [:class "doc__body article_text_wrapper js-search-mark"]}]
 [#:feed{:url "https://xkcd.com/atom.xml"}]
 [#:feed{:url "https://www.zerohedge.com/fullrss2.xml"}]
 [#:feed{:url "https://news.ycombinator.com/rss"}]
 [#:feed{:url "http://feeds.arstechnica.com/arstechnica/index/",
         :content-ident [:class "article-content post-page"]}]
 [#:feed{:url "https://content.novayagazeta.ru/rss/all.xml"}]
 [#:feed{:url "https://news.mail.ru/rss/90/"}]
 [#:feed{:url "http://static.feed.rbc.ru/rbc/logical/footer/news.rss"}]
 [#:feed{:url "https://www.exler.ru/rss.xml"}]
 [#:feed{:url "http://blog.cleancoder.com/atom.xml"}]
 [#:feed{:url "https://exler.ru/films/rss.xml",
         :content-ident [:class "film-item-content"]}]
 [#:feed{:url "https://www.archlinux.org/feeds/packages/"}]
 [#:feed{:url
         "http://comicfeeds.chrisbenard.net/view/dilbert/default"}]
 [#:feed{:url "https://lenta.ru/rss"}]
 [#:feed{:url "http://feeds.feedburner.com/PythonInsider"}]
 [#:feed{:url "https://clojure.org/feed.xml"}]
 [#:feed{:url "https://www.archlinux.org/feeds/news/",
         :content-ident [:class "article-content"]}]
 [#:feed{:url "http://rss.slashdot.org/Slashdot/slashdotMain"}]
 [#:feed{:url "https://kiwibyrd.org/feed/"}]
 [#:feed{:url "http://4pda.ru/feed/"}]
 [#:feed{:url "https://www.anandtech.com/rss/",
         :content-ident [:class "articleContent"]}]
 [#:feed{:url "https://bikepost.ru/rss/index/",
         :content-ident [:class "content"]}]
 [#:feed{:url "http://sgolub.ru/feed/",
         :content-ident [:class "entry-content clearfix"]}]
 [#:feed{:url "https://www.kommersant.ru/RSS/section-politics.xml",
         :content-ident
         [:class "doc__body article_text_wrapper js-search-mark"]}]
 [#:feed{:url "https://www.kommersant.ru/RSS/Autopilot_on.xml",
         :content-ident
         [:class "doc__body article_text_wrapper js-search-mark"]}]
 [#:feed{:url "https://www.computerra.ru/feed/",
         :content-ident [:class "article-body"]}]
 [#:feed{:url "https://www.kommersant.ru/RSS/section-world.xml"}]
 [#:feed{:url "https://habr.com/ru/rss/best/daily/"}]
 [#:feed{:url "http://feeds.feedburner.com/zerohedge/feed"}]
 [#:feed{:url "http://4pda.to/feed/",
         :content-ident [:class "content-box"]}]
 [#:feed{:url "https://www.datomic.com/feed.xml"}]]

#+end_example

#+begin_src clojure :results pp
(b/get-user-data "georgy@kibardin.name"
                   :sources/feed-title
)
#+end_src

#+RESULTS:
: class java.lang.NullPointerException

#+begin_src clojure :results pp
(d-b/fetch-settings "georgy@kibardin.name")
#+end_src

#+RESULTS:
#+begin_example
[[#:user{:styles
         ["arstechnica.com https://shashurup.github.io/feedcircuit-styles/arstechnica.css"
          "habr.com https://shashurup.github.io/feedcircuit-styles/img-data-src.js"],
         :sources
         [{:db/id 136339441907608,
           :source/num 0,
           :source/active true,
           :source/feed #:feed{:url "https://news.mail.ru/rss/90/"}}
          {:db/id 136339441907609,
           :source/num 1,
           :source/active true,
           :source/feed #:feed{:url "https://lenta.ru/rss"}}
          {:db/id 136339441907610,
           :source/num 2,
           :source/active true,
           :source/feed
           #:feed{:url "http://feeds.feedburner.com/zerohedge/feed"}}
          {:db/id 136339441907611,
           :source/num 3,
           :source/active true,
           :source/feed
           #:feed{:url "https://news.ycombinator.com/rss"}}
          {:db/id 136339441907612,
           :source/num 4,
           :source/active true,
           :source/feed
           #:feed{:url
                  "http://rss.slashdot.org/Slashdot/slashdotMain"}}
          {:db/id 136339441907613,
           :source/num 5,
           :source/active true,
           :source/feed #:feed{:url "https://xkcd.com/atom.xml"}}
          {:db/id 136339441907614,
           :source/num 6,
           :source/active true,
           :source/feed
           #:feed{:url
                  "http://comicfeeds.chrisbenard.net/view/dilbert/default"}}
          {:db/id 136339441907615,
           :source/num 7,
           :source/active true,
           :source/feed #:feed{:url "https://exler.ru/films/rss.xml"}}
          {:db/id 136339441907616,
           :source/num 8,
           :source/active true,
           :source/feed #:feed{:url "https://kiwibyrd.org/feed/"}}
          {:db/id 136339441907617,
           :source/num 9,
           :source/active true,
           :source/feed #:feed{:url "http://sgolub.ru/feed/"}}
          {:db/id 136339441907618,
           :source/num 10,
           :source/active true,
           :source/feed #:feed{:url "https://bikepost.ru/rss/index/"}}
          {:db/id 136339441907619,
           :source/num 11,
           :source/active true,
           :source/feed
           #:feed{:url
                  "http://www.opennet.ru/opennews/opennews_all.rss"}}
          {:db/id 136339441907620,
           :source/num 12,
           :source/active true,
           :source/feed
           #:feed{:url "https://habr.com/ru/rss/best/daily/"}}
          {:db/id 136339441907621,
           :source/num 13,
           :source/active true,
           :source/feed #:feed{:url "http://4pda.to/feed/"}}
          {:db/id 136339441907622,
           :source/num 14,
           :source/active true,
           :source/feed #:feed{:url "https://www.computerra.ru/feed/"}}
          {:db/id 136339441907623,
           :source/num 15,
           :source/active true,
           :source/feed
           #:feed{:url
                  "https://www.kommersant.ru/RSS/section-hitech.xml"}}
          {:db/id 136339441907624,
           :source/num 16,
           :source/active true,
           :source/feed
           #:feed{:url
                  "https://www.kommersant.ru/RSS/Autopilot_on.xml"}}
          {:db/id 136339441907625,
           :source/num 17,
           :source/active true,
           :source/filters "!Новости",
           :source/feed
           #:feed{:url "https://content.novayagazeta.ru/rss/all.xml"}}
          {:db/id 136339441907626,
           :source/num 18,
           :source/active false,
           :source/feed
           #:feed{:url
                  "https://www.kommersant.ru/RSS/section-world.xml"}}
          {:db/id 136339441907627,
           :source/num 19,
           :source/active true,
           :source/feed
           #:feed{:url
                  "https://www.kommersant.ru/RSS/section-politics.xml"}}
          {:db/id 136339441907628,
           :source/num 20,
           :source/active true,
           :source/feed
           #:feed{:url "http://blog.cleancoder.com/atom.xml"}}
          {:db/id 136339441907629,
           :source/num 21,
           :source/active false,
           :source/feed
           #:feed{:url "https://www.archlinux.org/feeds/packages/"}}
          {:db/id 136339441907630,
           :source/num 22,
           :source/active true,
           :source/feed
           #:feed{:url "https://www.archlinux.org/feeds/news/"}}
          {:db/id 136339441907631,
           :source/num 23,
           :source/active true,
           :source/feed #:feed{:url "https://clojure.org/feed.xml"}}
          {:db/id 136339441907632,
           :source/num 24,
           :source/active true,
           :source/feed #:feed{:url "https://www.anandtech.com/rss/"}}
          {:db/id 136339441907633,
           :source/num 25,
           :source/active true,
           :source/feed
           #:feed{:url
                  "http://feeds.arstechnica.com/arstechnica/index/"}}
          {:db/id 136339441907634,
           :source/num 26,
           :source/active true,
           :source/feed
           #:feed{:url "http://feeds.feedburner.com/PythonInsider"}}]}]]

#+end_example

#+begin_src clojure :results pp
(let [[updates deletes]
(d-b/diff-sources (->> ["site1"
                        "site3 filter"
                        "#site2 filters"
                        "site4 filter11" "site4 filter22"
                        "site2 filter2"
                        "new-site"]
                       (map u/parse-source)
                       d-b/numerate)
              [{:db/id 1
                :source/num 0
                :source/active true
                :source/feed {:feed/url "site1"}}
               {:db/id 2
                :source/num 1
                :source/active true
                :source/filters "filters"
                :source/feed {:feed/url "site2"}}
               {:db/id 3
                :source/num 2
                :source/active true
                :source/feed {:feed/url "site3"}}
               {:db/id 4
                :source/num 3
                :source/active true
                :source/filters "filter1"
                :source/feed {:feed/url "site4"}}
               {:db/id 5
                :source/num 4
                :source/active true
                :source/filters "filter2"
                :source/feed {:feed/url "site4"}}
               {:db/id 6
                :source/num 5
                :source/active true
                :source/feed {:feed/url "site88"}}
                ])]
  [updates deletes]        
  ;; (d-b/prepare-sources-tx updates deletes "georgy@kibardin.name")
  )
#+end_src

#+RESULTS:
#+begin_example
[[{:source/active true, :source/feed "site1", :source/num 0, :db/id 1}
  {:source/active true,
   :source/feed "site3",
   :source/filters "filter",
   :source/num 1,
   :db/id 3}
  {:source/active false,
   :source/feed "site2",
   :source/filters "filters",
   :source/num 2,
   :db/id 2}
  {:source/active true,
   :source/feed "site4",
   :source/filters "filter11",
   :source/num 3,
   :db/id 4}
  {:source/active true,
   :source/feed "site4",
   :source/filters "filter22",
   :source/num 4,
   :db/id 5}
  #:source{:active true,
           :feed "site2",
           :filters "filter2",
           :num 5,
           :position -16}
  #:source{:active true, :feed "new-site", :num 6, :position -16}]
 (6)]

#+end_example

#+begin_src clojure :results pp
(->> (b/get-user-data "georgy@kibardin.name" :sources/feed-title)
     :user/sources
     b/get-unread-items
     (take 16))
#+end_src

#+begin_src clojure :results pp
(->> (b/get-items "96757023244414" 1276)
     (take 16))
#+end_src


#+begin_src clojure :results pp
(d-b/prepare-styles-tx ["abc" "def"] [["def"] ["ghi"]] "georgy@kibardin.name")
#+end_src

#+RESULTS:
: ([:db/add [:user/id "georgy@kibardin.name"] :user/styles "ghi"]
:  [:db/retract [:user/id "georgy@kibardin.name"] :user/styles "abc"])
: 
